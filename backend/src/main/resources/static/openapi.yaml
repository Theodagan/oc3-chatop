{
  "openapi": "3.0.1",
  "info": {
    "title": "Chatop API",
    "description": "API for Chatop application",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://3001-idx-oc3-chatop-1737992916895.cluster-qtqwjj3wgzff6uxtk26wj7fzq6.cloudworkstations.dev",
      "description": "IDX server url"
    }
  ],
  "paths": {
    "/api/rentals/{id}": {
      "get": {
        "tags": [
          "rental-controller"
        ],
        "summary": "Get a rental by id",
        "description": "Returns a rental as per the id",
        "operationId": "getRentalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": [
          "rental-controller"
        ],
        "operationId": "updateRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "delete": {
        "tags": [
          "rental-controller"
        ],
        "operationId": "deleteRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/rentals": {
      "get": {
        "tags": [
          "rental-controller"
        ],
        "summary": "Get all rentals",
        "description": "Returns all rentals as a list",
        "operationId": "getAllRentals",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": [
          "rental-controller"
        ],
        "operationId": "createRental",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RentalForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/messages": {
      "post": {
        "tags": [
          "message-controller"
        ],
        "operationId": "createMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "db-user-controller"
        ],
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "db-user-controller"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "db-user-controller"
        ],
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "db-user-controller"
        ],
        "operationId": "me",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/meDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "RentalForm": {
        "required": [
          "description",
          "name",
          "ownerId",
          "picture",
          "price",
          "surface"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Spacious House"
          },
          "surface": {
            "type": "number",
            "format": "double",
            "example": 123.5
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 1203
          },
          "description": {
            "type": "string",
            "example": "This a description for a Rental"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "picture": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "MessageForm": {
        "required": [
          "message",
          "rental_id",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "This is a message"
          },
          "rental_id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "DbUser": {
        "required": [
          "createdAt",
          "email",
          "id",
          "name",
          "password",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "meDTO": {
        "required": [
          "created_at",
          "email",
          "id",
          "name",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}